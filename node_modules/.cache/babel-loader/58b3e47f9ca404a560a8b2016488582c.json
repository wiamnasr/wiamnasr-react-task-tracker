{"ast":null,"code":"var _jsxFileName = \"/home/codeyourfuture/Documents/GitHub/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\n// Components\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\"; // Hooks\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Keeping the state at the top level of my app to be able to use it with other components\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Doctors Appointment\",\n    day: \"May 7th at 6:50pm\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Meeting at School\",\n    day: \"May 8th at 2:00pm\",\n    reminder: true\n  }, {\n    id: 3,\n    text: \"Food Shopping\",\n    day: \"May 8th at 5:00pm\",\n    reminder: false\n  }]); // Delete Task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    console.log(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : \"No Tasks to Show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2EcJoU+oRbXMR1uaoUFslBr+AoU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/codeyourfuture/Documents/GitHub/react-task-tracker/src/App.js"],"names":["Header","Tasks","useState","App","tasks","setTasks","id","text","day","reminder","deleteTask","filter","task","toggleReminder","console","log","length"],"mappings":";;;AAAA;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACjC;AACEI,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,qBAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,mBAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPiC,EAajC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAbiC,CAAD,CAAlC,CAFa,CAuBb;;AACA,QAAMC,UAAU,GAAIJ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAxBa,CA4Bb;;;AACA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAAK,CAACY,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEZ,KAAd;AAAqB,MAAA,QAAQ,EAAEM,UAA/B;AAA2C,MAAA,QAAQ,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA3CQV,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["// Components\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\n\n// Hooks\nimport { useState } from \"react\";\n\nfunction App() {\n  // Keeping the state at the top level of my app to be able to use it with other components\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"May 7th at 6:50pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Meeting at School\",\n      day: \"May 8th at 2:00pm\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Food Shopping\",\n      day: \"May 8th at 5:00pm\",\n      reminder: false,\n    },\n  ]);\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    console.log(id);\n  };\n\n  return (\n    <div className='container'>\n      <Header />\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n      ) : (\n        \"No Tasks to Show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}