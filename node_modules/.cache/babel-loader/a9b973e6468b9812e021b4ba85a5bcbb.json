{"ast":null,"code":"import _slicedToArray from\"/home/codeyourfuture/Documents/GitHub/react-task-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useState}from\"react\";// Styles\nimport{Wrapper,Content}from\"./AddTask.styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddTask=function AddTask(_ref){var onAdd=_ref.onAdd;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),day=_useState4[0],setDay=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),reminder=_useState6[0],setReminder=_useState6[1];var onSubmit=function onSubmit(e){e.preventDefault();if(!text){alert(\"Please add a task\");return;}onAdd({text:text,day:day,reminder:reminder});setText(\"\");setDay(\"\");setReminder(false);};return/*#__PURE__*/_jsxs(Wrapper,{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(Content,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Task\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add Task\",value:text,onChange:function onChange(e){return setText(e.target.value);}})]}),/*#__PURE__*/_jsxs(Content,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Day & Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add Day & time\",value:day,onChange:function onChange(e){return setDay(e.target.value);}})]}),/*#__PURE__*/_jsxs(Content,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Set Reminder\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:reminder,value:reminder,onChange:function onChange(e){return setReminder(e.currentTarget.checked);}})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Save Task\"})]});};export default AddTask;","map":{"version":3,"sources":["/home/codeyourfuture/Documents/GitHub/react-task-tracker/src/components/AddTask/index.js"],"names":["React","useState","Wrapper","Content","AddTask","onAdd","text","setText","day","setDay","reminder","setReminder","onSubmit","e","preventDefault","alert","target","value","currentTarget","checked"],"mappings":"2IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,OAAzB,CAEA;AACA,OAASC,OAAT,CAAkBC,OAAlB,KAAiC,kBAAjC,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAC7B,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eACA,eAAsBN,QAAQ,CAAC,EAAD,CAA9B,yCAAOO,GAAP,eAAYC,MAAZ,eACA,eAAgCR,QAAQ,CAAC,KAAD,CAAxC,yCAAOS,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBA,CAAC,CAACC,cAAF,GACA,GAAI,CAACR,IAAL,CAAW,CACTS,KAAK,CAAC,mBAAD,CAAL,CACA,OACD,CAEDV,KAAK,CAAC,CAAEC,IAAI,CAAJA,IAAF,CAAQE,GAAG,CAAHA,GAAR,CAAaE,QAAQ,CAARA,QAAb,CAAD,CAAL,CAEAH,OAAO,CAAC,EAAD,CAAP,CACAE,MAAM,CAAC,EAAD,CAAN,CACAE,WAAW,CAAC,KAAD,CAAX,CACD,CAZD,CAcA,mBACE,MAAC,OAAD,EAAS,QAAQ,CAAEC,QAAnB,wBACE,MAAC,OAAD,yBACE,+BADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,UAFd,CAGE,KAAK,CAAEN,IAHT,CAIE,QAAQ,CAAE,kBAACO,CAAD,QAAON,CAAAA,OAAO,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd,EAJZ,EAFF,GADF,cAWE,MAAC,OAAD,yBACE,qCADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,gBAFd,CAGE,KAAK,CAAET,GAHT,CAIE,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,MAAM,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAb,EAJZ,EAFF,GAXF,cAqBE,MAAC,OAAD,yBACE,uCADF,cAEE,cACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAEP,QAFX,CAGE,KAAK,CAAEA,QAHT,CAIE,QAAQ,CAAE,kBAACG,CAAD,QAAOF,CAAAA,WAAW,CAACE,CAAC,CAACK,aAAF,CAAgBC,OAAjB,CAAlB,EAJZ,EAFF,GArBF,cA+BE,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,WAA3B,EA/BF,GADF,CAmCD,CAtDD,CAwDA,cAAef,CAAAA,OAAf","sourcesContent":["import React from \"react\";\n\nimport { useState } from \"react\";\n\n// Styles\nimport { Wrapper, Content } from \"./AddTask.styles\";\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!text) {\n      alert(\"Please add a task\");\n      return;\n    }\n\n    onAdd({ text, day, reminder });\n\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <Wrapper onSubmit={onSubmit}>\n      <Content>\n        <label>Task</label>\n        <input\n          type='text'\n          placeholder='Add Task'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        ></input>\n      </Content>\n\n      <Content>\n        <label>Day & Time</label>\n        <input\n          type='text'\n          placeholder='Add Day & time'\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        ></input>\n      </Content>\n\n      <Content>\n        <label>Set Reminder</label>\n        <input\n          type='checkbox'\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </Content>\n\n      <input type='submit' value='Save Task' />\n    </Wrapper>\n  );\n};\n\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}